#the genera to look for:
gen <- c("Roseomonas", "Nocardia", "Anabaena", "Paracoccus", "Rhodococcus")
# sour <- read.csv(snakemake@input[["sourmash"]][1],
#                  header = T, stringsAsFactors = F)
sour <- read.csv("Documents/ReadSimulation/Tumor-microbiome-calling/workflow/results/sourmash/sr/lca-class/mixed_sample1_1000_R1.csv")
# sour <- read.csv(snakemake@input[["sourmash"]][1],
#                  header = T, stringsAsFactors = F)
sour <- read.csv("Documents/ReadSimulation/Tumor-microbiome-calling/workflow/")
getwd()
# sour <- read.csv(snakemake@input[["sourmash"]][1],
#                  header = T, stringsAsFactors = F)
sour <- read.csv("/home/uzuner/Documents/ReadSimulation/Tumor-microbiome-calling/workflow/results/sourmash/sr/lca-class/Scaled_10000/mixed_sample1_1000_R1.csv")
View(sour)
sour <- read.csv("/home/uzuner/Documents/ReadSimulation/Tumor-microbiome-calling/workflow/results/sourmash/sr/lca-class/Scaled_2000/Scaled_2000_mixed_sample1_1000_R1.csv")
# sour <- read.csv(snakemake@input[["sourmash"]][1],
#                  header = T, stringsAsFactors = F)
sour <- read.csv("/home/uzuner/Documents/ReadSimulation/Tumor-microbiome-calling/workflow/results/sourmash/sr/lca-class/Scaled_10000/mixed_sample1_1000_R1.csv")
sour2 <- read.csv("/home/uzuner/Documents/ReadSimulation/Tumor-microbiome-calling/workflow/results/sourmash/sr/lca-class/Scaled_2000/Scaled_2000_mixed_sample1_1000_R1.csv")
setdiff(sour, sour2)
# sour <- read.csv(snakemake@input[["sourmash"]][1],
#                  header = T, stringsAsFactors = F)
#sour <- read.csv("/home/uzuner/Documents/ReadSimulation/Tumor-microbiome-calling/workflow/results/sourmash/sr/lca-class/Scaled_10000/mixed_sample1_1000_R1.csv")
sour <- read.csv("/home/uzuner/Documents/ReadSimulation/Tumor-microbiome-calling/workflow/results/sourmash/sr/lca-class/Scaled_2000/Scaled_2000_mixed_sample1_1000_R1.csv")
sel.sour <- sour[sour$genus %in% gen,]
View(sel.sour)
sel.sour <- sel.sour[!duplicated(sel.sour[,"genus"]),]
sour.df <- sel.sour[,c("count", "genus")]
View(sour.df)
if (any(!gen %in% sour.df$genus)) {
add <- data.frame("count" = 0,
genus = gen[!gen %in% sour.df$genus])
sour.fin <- rbind(sour.df, add)
sour.fin$method <- "sourmash"
} else {
sour.fin <- sour.df
sour.fin$method <- "sourmash"
}
kra <- read.table("/home/uzuner/Documents/ReadSimulation/Tumor-microbiome-calling/workflow/results/kraken2/sr/bacterial-db/evol1_Sample1_fraction1000_bracken_species",
header = F, sep = "\t")
View(kra)
kra.g <- kra[kra$V4 == "G",]
kra.g$V6 <- gsub( " ", "", kra.g$V6)
View(kra.g)
sel.kra <- kra.g[kra.g$V6 %in% gen,] #v2 is the count
View(sel.kra)
kra.fin <- sel.kra[,c("V2", "V6")]
colnames(kra.fin) <- c("count", "genus")
kra.fin$method <- "kraken2"
View(kra.fin)
#final table
fin <- rbind(sour.fin, kra.fin)
View(fin)
#plot
library(ggplot2)
p <- ggplot(data = fin, aes(x = genus, y = count, group = count, fill = genus)) + ylim(0, 15000)
p <- p + geom_bar(stat = "identity", width = 0.5, position = "dodge")
p <- p + facet_grid(. ~ method)
p <- p + theme_bw()
p <- p + theme(axis.text.x = element_text(angle = 90))
source('~/Documents/ReadSimulation/Tumor-microbiome-calling/workflow/scripts/abundance_plot.R', echo=TRUE)
p
View(fin)
#plot
library(ggplot2)
p <- ggplot(data = fin, aes(x = genus, y = count, group = count, fill = genus)) + ylim(0, 15000)
p <- p + geom_bar(stat = "identity", width = 0.5, position = "dodge")
p <- p + facet_grid(. ~ method)
p <- p + theme_bw()
p <- p + theme(axis.text.x = element_text(angle = 90))
p
p <- ggplot(data = fin, aes(x = genus, y = count, group = count, fill = genus)) + ylim(0, 180000)
p <- p + geom_bar(stat = "identity", width = 0.5, position = "dodge")
p <- p + facet_grid(. ~ method)
p <- p + theme_bw()
p <- p + theme(axis.text.x = element_text(angle = 90))
p
p <- ggplot(data = fin, aes(x = genus, y = count, group = count, fill = genus)) + ylim(0, 15000)
p <- p + geom_bar(stat = "identity", width = 0.5, position = "dodge")
p <- p + facet_grid(. ~ method)
p <- p + theme_bw()
p <- p + theme(axis.text.x = element_text(angle = 90))
p
# ggsave(filename = paste0("results/final_abundance/","Sample",as.character(snakemake@params[["n_samples"]]),
#                          "_fraction",snakemake@params[["fraction"]],"_total_abundance.pdf"))
ggsave(filename = paste0("results/final_abundance/second_try/sr/","Sample",as.character(snakemake@params[["n_samples"]]),
"_fraction",snakemake@params[["fraction"]],"_total_abundance.pdf"))
sour <- read.csv("/home/uzuner/Documents/ReadSimulation/Tumor-microbiome-calling/workflow/results/sourmash/lr/lca-class/Scaled_2000_k21/Scaled_2000_mixed_sample1_1000_k21.csv")
View(sour)
source('~/Documents/ReadSimulation/Tumor-microbiome-calling/workflow/scripts/abundance_plot.R', echo=TRUE)
sour <- read.csv(snakemake@input[["sourmash"]][1],
header = T, stringsAsFactors = F)
sour <- read.csv("/home/uzuner/Documents/ReadSimulation/Tumor-microbiome-calling/workflow/results/sourmash/lr/lca-class/Scaled_2000_k21/Scaled_2000_mixed_sample1_1000_k21.csv")
View(sour)
kra <- read.table("/home/uzuner/Documents/ReadSimulation/Tumor-microbiome-calling/workflow/results/kraken2/lr/mini-db/evol1_Sample1_fraction1000_bracken_species",header = F, sep = "\t")
kra.g <- kra[kra$V4 == "G",]
kra.g$V6 <- gsub( " ", "", kra.g$V6)
sel.kra <- kra.g[kra.g$V6 %in% gen,] #v2 is the count
View(sel.kra)
kra <- read.table("/home/uzuner/Documents/ReadSimulation/Tumor-microbiome-calling/workflow/results/kraken2/lr/mini-db/evol1_Sample1_fraction10000_bracken_species",header = F, sep = "\t")
kra.g <- kra[kra$V4 == "G",]
kra.g$V6 <- gsub( " ", "", kra.g$V6)
View(kra.g)
sel.kra <- kra.g[kra.g$V6 %in% gen,] #v2 is the count
View(sel.kra)
kra <- read.table("/home/uzuner/Documents/ReadSimulation/Tumor-microbiome-calling/workflow/results/kraken2/lr/bacterial-db/evol1_Sample1_fraction10000_bracken_species",header = F, sep = "\t")
kra.g <- kra[kra$V4 == "G",]
kra.g$V6 <- gsub( " ", "", kra.g$V6)
sel.kra <- kra.g[kra.g$V6 %in% gen,] #v2 is the count
View(sel.kra)
kra.fin <- sel.kra[,c("V2", "V6")]
colnames(kra.fin) <- c("count", "genus")
kra.fin$method <- "kraken2"
View(kra.fin)
View(kra.fin)
View(kra.fin)
gen <- c("Roseomonas", "Nocardia", "Anabaena", "Rhodococcus")
#sour <- read.csv(snakemake@input[["sourmash"]][1],
#                 header = T, stringsAsFactors = F)
#sour <- read.csv("../results/sourmash/sr/lca-class/Scaled_2000/Scaled_2000_mixed_sample1_10000_R1.csv")
s.files <- list.files("/home/uzuner/Documents/ReadSimulation/Tumor-microbiome-calling/workflow/results/sourmash/sr/lca-class/Scaled_2000",
full.names = T, pattern = "R1.csv")
k.files <- list.files("/home/uzuner/Documents/ReadSimulation/Tumor-microbiome-calling/workflow/results/kraken2/sr/bacterial-db",
full.names = T, pattern = "_species")
fin.s <- data.frame()
for (i in s.files){
sour <- read.csv(i)
sel.sour <- sour[sour$genus %in% gen,]
sel.sour <- sel.sour[!duplicated(sel.sour[,"genus"]),]
sour.df <- sel.sour[,c("count", "genus")]
if (any(!gen %in% sour.df$genus)) {
add <- data.frame("count" = 0,
genus = gen[!gen %in% sour.df$genus])
sour.fin <- rbind(sour.df, add)
sour.fin$method <- "sourmash"
} else {
sour.fin <- sour.df
sour.fin$method <- "sourmash"
}
#number of reads, mixed_10000_R1: 98236994
#number of reads, mixed_1000_R1: 98191994
sour.fin$o_fraction <- sour.fin$count/98000000
r_fraction <- unlist(strsplit(i, split = "_"))[6] #get the fraction
sour.fin$r_fraction <- as.numeric(r_fraction)/98000000 #divide the total n reads by the fraction
#add sample name
sour.fin$sample <- unlist(strsplit(i, split = "_"))[6]
fin.s <- rbind(fin.s, sour.fin)
}
fin.k <- data.frame()
for (j in k.files){
#kraken2
#kra <- read.table(snakemake@input[["kraken2"]][1],
#                 header = F, sep = "\t")
kra <- read.table(j, header = F, sep = "\t")
kra.g <- kra[kra$V4 == "G",]
kra.g$V6 <- gsub( " ", "", kra.g$V6)
sel.kra <- kra.g[kra.g$V6 %in% gen,] #v2 is the count
kra.fin <- sel.kra[,c("V2", "V6")]
colnames(kra.fin) <- c("count", "genus")
kra.fin$method <- "kraken2"
#fraction calculation
kra.fin$o_fraction <- kra.fin$count/98000000
tmp <- unlist(strsplit(j, split = "_"))[3] #get the fraction
r_fraction <- unlist(strsplit(tmp, split = "fraction"))[2]
kra.fin$r_fraction <- as.numeric(r_fraction)/98000000 #divide the total n reads by the fraction
#fin$o_fraction <- log10(fin$o_fraction + 1)
#add sample name
kra.fin$sample <- unlist(strsplit(j, split = "_"))[3]
fin.k <- rbind(fin.k, kra.fin)
}
#final table
fin <- rbind(fin.s, fin.k)
#modify sample names
deneme <- fin
fin$sample[1:16] <- paste0("fraction", fin$sample)
fin$sample_f <- factor(fin$sample, levels=c("fraction1000", "fraction5000", "fraction10000", "fraction15000"))
#scatter plot
library(ggplot2)
p <- ggplot(fin, aes(x=r_fraction, y=o_fraction, shape=genus, color=genus))+
geom_point()+
theme_bw() + facet_grid(method~sample_f) + coord_fixed()
p
ggsave(p,filename = paste0("results/final_abundance/scatter_plot/sr/","Sample",as.character(snakemake@params[["n_samples"]]),
"_fraction",snakemake@params[["fraction"]],"_total_abundance_coord_fixed.pdf"))
View(fin)
normalizePath("results/sourmash/sr/lca-class/Scaled_2000/Scaled_2000_mixed_sample1_1000_R1.csv")
###################
##FOR SHORT READS##
###################
x <- getwd()
setwd("~/Documents/ReadSimulation/Tumor-microbiome-calling/workflow/")
r_fraction <- unlist(strsplit("results/sourmash/sr/lca-class/Scaled_2000/Scaled_2000_mixed_sample1_1000_R1.csv", split = "_"))[6] #get the fraction
sour.fin$r_fraction <- as.numeric(r_fraction)/98000000 #divide the total n reads by the fraction
View(sour.fin)
#add sample name
sour.fin$sample <- unlist(strsplit("results/sourmash/sr/lca-class/Scaled_2000/Scaled_2000_mixed_sample1_1000_R1.csv", split = "_"))[6]
View(sour.fin)
r_fraction <- unlist(strsplit("results/sourmash/sr/lca-class/Scaled_2000/Scaled_2000_mixed_sample1_1000_R1.csv", split = "_"))[6] #get the fraction
sour.fin$r_fraction <- as.numeric(r_fraction)/98000000 #divide the total n reads by the fraction
unlist(strsplit("results/sourmash/sr/lca-class/Scaled_2000/Scaled_2000_mixed_sample1_1000_R1.csv", split = "_"))[6]
tmp <- unlist(strsplit("results/kraken2/sr/bacterial-db/evol1_Sample1_fraction1000_bracken_species", split = "_"))[3] #get the fraction
r_fraction <- unlist(strsplit(tmp, split = "fraction"))[2]
#add sample name
kra.fin$sample <- unlist(strsplit("results/kraken2/sr/bacterial-db/evol1_Sample1_fraction1000_bracken_species", split = "_"))[3]
unlist(strsplit("results/kraken2/sr/bacterial-db/evol1_Sample1_fraction1000_bracken_species", split = "_"))[3]
#scatter plot
p <- ggplot(fin, aes(x=r_fraction, y=o_fraction, shape=genus, color=genus))+
geom_point()+
theme_bw() + facet_grid(method~sample_f) + coord_fixed() + geom_abline
#scatter plot
p <- ggplot(fin, aes(x=r_fraction, y=o_fraction, shape=genus, color=genus))+
geom_point()+
theme_classic() + facet_grid(method~sample_f) + coord_fixed() +
#save the pdf file containing the scatter plot
ggsave(p, filename = paste0("results/final_abundance/scatter_plot/sr/final_abundance_all_samples_coord_fixed.pdf"),
width = 11,
height = 8.5,)
